#!/usr/bin/env node

const app = require('../app');

//const debug = require('debug')('homd-node.js');
const CFG = require(app_root + '/config/config');
const fs = require('fs-extra');

// CL example: nodemon bin/www testing

available_environments = ['testing','development','production'];

console.log('CFG.HOSTNAME: ',CFG.HOSTNAME)
if(available_environments.indexOf(process.argv[2]) !== -1){
  process.env.NODE_ENV = process.argv[2];
}else{
  console.log('Available Environments:', available_environments);
  
  if(CFG.HOSTNAME === 'homd.org') {  // put production host here
      process.env.NODE_ENV = 'production';  // homd
      process.env.NODE_OPTIONS = '--max-old-space-size=4096'
  }else if(CFG.HOSTNAME === 'localhost'){
      process.env.NODE_ENV = 'development';  // homddev
  }else{
      process.env.NODE_ENV = 'development';
      // this isn't used (use "node ----max-old-space-size=4096 app" instead) '
      process.env.NODE_OPTIONS = '--max-old-space-size=4096'
  }
}
console.log("Setting Environment to: ",process.env.NODE_ENV);
console.log("Node Options: ",process.env.NODE_OPTIONS);
const options = {}
let http;
if(CFG.SERVER_PORT == '443'){
   
   options.key = fs.readFileSync(CFG.KEY_FILE),
   options.cert= fs.readFileSync(CFG.CERT_FILE)
   http = require('https');
   console.log('Reading https cert files',CFG.KEY_FILE,CFG.CERT_FILE)
}else{
   http = require('http');
};

app.set('env', process.env.NODE_ENV);
process.env.PORT = CFG.SERVER_PORT || '3001'
console.log(process.env.PORT)
app.set('port', process.env.PORT);

console.log('DATABASE: =>'+NODE_BACTERIAL_DATABASE+'<= (Databases set in config/db-connection.js)');


console.log('ENV:',app.get('env'),'(Environment set in bin/homd-node-start)');

const server = http.createServer(options, app).listen(app.get('port'), function(){
    //debug('Express server listening on port ' + server.address().port);
    console.log(`HOMD-Node.js server is listening on ${CFG.HOSTNAME}:${process.env.PORT}`)
});
server.timeout = 100 * 1000

