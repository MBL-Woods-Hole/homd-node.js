<style>
#taxon-page-div {
   margin:20px 0;
   padding:10px;
   border:1px solid green;
   
}
#plot_div{
   
   width:460px;
   
}
#segata_table_div{
   position: relative;
   right:10px;
   width:auto;
}
#segata_table{
    font-size:small;
    border-collapse: collapse;
}
#segata_table td{
    border:1px solid black;
    padding:2px;
}
#visit-life-page{
   float:right;
   font-size:x-small;
   color:green;
}
#visit-life-page a{
  color:steelblue;
}
</style>
<% segata_data = JSON.parse(segata) %>
<% segata_order = JSON.parse(segata_order) %>
<% children_lst = JSON.parse(children) %>
<% genera = JSON.parse(genera) %>
<%- include('../../partials/header_html'); %>

<body>
  	<div id='wrapper'>
    <%- include('../../partials/header_img'); %>
    <%- include('../../partials/navbar'); %>
    
    <% if(rank == 'klass' || rank == 'Klass'){  %>
        <% rank_show = 'Class' %>
    <% }else{ %> 
       <% rank_show = rank.charAt(0).toUpperCase() + rank.slice(1) %>
    <% } %>
    <div class='page-content' >
		 					
		<div class='title'><%= rank_show %>: <%= tax_name %></div>
		
		<div id='taxon-page-div'>
		
		    Full Lineage: <%- lineage %>
		    <span id='visit-life-page'><a href='/taxa/life?rank=<%= rank %>&name=<%= tax_name %>'>Visit LifePage</a></span>
		    <br><small>Lower rank member(s): 
		    <% if(children_lst.length <= 5){ %>
		        <% for(n in children_lst){ %>
		          <span >[<%- children_lst[n] %>]</span>
		        <% } %>
		    <% }else{ %>
		        <span id='toggle_ranks'><a href='#' onclick='toggle_lower_ranks()'>show[+]</a></span>
		      
		      <div id='lower-rank-items-div' style='display:none'>
		      <% cols = 5 %>
		      <table id='tbl'><tr>
		      <% for(n in children_lst){ %>
		         <% if(n % cols == 0){  %><!-- // modulus -->
                  </tr><tr>
                 <% } %>
		        <td><small>[<%- children_lst[n] %>]</small></td>
		      <% } %>
		      </tr></table>
		      </div>
		    
		    
		    <% } %>
		    <% if(['phylum','klass','order'].indexOf(rank) != -1){ %>
		      <br>Genera:
		      <select class='dropdown' onchange="location = this.value;">
		      <option value="" disabled selected>Select your genera</option>
		      <% for(n in genera){ %>
	            <option value='/taxa/taxon_page/genus/<%= genera[n].taxon %>'><%= genera[n].taxon %></option>
	          <% } %>
		    <% } %>
		    </select>
		    </small>
		    
		</div>	
	

<div id="row1">	
  <div id='column_left1'  >
		
		
		  <div id='plot_div'>
			<small><%= segata_text %></small>
			<div id="plot_here"></div> 
			<small><a href='https://genomebiology.biomedcentral.com/articles/10.1186/gb-2012-13-6-r42' target='_blank'>
                Segata et al.(2012)</a>
            </small>
	      </div>
	    
	</div>    <!--  end col-left1-->
  
    <div id="column_right1" >
	    
            <div id='segata_table_div'>
            <table id='segata_table' border='1'><thead><tr><th></th>
            <% for(n in segata_order){ %>
              <th><%= segata_order[n] %></th>
            <% } %>
            </tr>
        
            </thead>
            <tbody>
            <tr><th>Avg</th>
            <% for(n in segata_data){ %>   <!-- Already corrected order -->
                <td><%= segata_data[n].avg %></td>
            <% } %>
            </tr>
            <tr><th>Stdev</th>
            <% for(n in segata_data){ %>   <!-- Already corrected order -->
                <td><%= segata_data[n].stdev %></td>
            <% } %>
            </tr>
            </tbody>
            </table>
            <br>
            <small>
                Average abundance, expressed in percentage of all microbial 
                clades in the four digestive tract groups and among the ten body habitats. 
                <ul>
                <li>Group 1 (G1): buccal mucosa (BM), keratinized gingiva (KG) and hard palate (HP); 
                <li>Group 2 (G2): throat (Th), palatine tonsils (PT), tongue dorsum (TD) and saliva (Sal); 
                <li>Group 3 (G3): supraginval (SupP) and subgingival plaques (SubP); 
                <li>Group 4 (G4): stool (Stool). 
                </ul>
                <a href='https://genomebiology.biomedcentral.com/articles/10.1186/gb-2012-13-6-r42' target='_blank'>
                Segata et al.(2012)</a>
                </small>	 
        
            </div>
	    
	    
	</div> <!-- end col right -->
	
	
</div>  <!-- end row1 -->



    </div> <!-- end: page-content -->
    
    <div id='footer'>
         <%- include('../../partials/footer'); %>
    </div>
       
</body>

</html>

<script type="text/javascript" src="/js/jquery-2.1.1.min.js"></script> 
<script type="text/javascript" src="/js/menu.js"></script>
<script src="https://d3js.org/d3.v7.min.js"></script>
<script type="text/javascript" src="/js/taxonomy.js"></script>
<script>
  mainmenu()
  data = JSON.parse('<%- segata %>')
  max = '<%- max %>'
  if(data.length == 0){
     document.getElementById("plot_here").innerHTML = 'No Segata2012 Data2'
     document.getElementById("segata_table_div").innerHTML = 'No Segata2012 Data2'
  
  }else{
	  console.log(data)
	  //max = max([item.avg for item in data])
	  //max = Math.max.apply(Math, data.map(function(o) { return o.avg; }))
	  max_ceil = Math.ceil(max)
	  console.log(max)
	  
	  
	  // set the dimensions and margins of the graph
		var margin = {top: 30, right: 30, bottom: 70, left: 60},
			width = 460 - margin.left - margin.right,
			height = 400 - margin.top - margin.bottom;

		// append the svg object to the body of the page
		var svg = d3.select("#plot_here")
		  .append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
		  .append("g")
			.attr("transform",
				  "translate(" + margin.left + "," + margin.top + ")");
	
	// X axis
	var x = d3.scaleBand()
	  .range([ 0, width ])
	  .domain(data.map(function(d) { return d.loci; }))
	  .padding(0.2);
	svg.append("g")
	  .attr("transform", "translate(0," + height + ")")
	  .call(d3.axisBottom(x))
	  .selectAll("text")
		.attr("transform", "translate(-10,0)rotate(-45)")
		.style("text-anchor", "end");

	// Add Y axis
	var y = d3.scaleLinear()
	  .domain([0, max_ceil])
	  .range([ height, 0]);
	svg.append("g")
	  .call(d3.axisLeft(y));
    
    // Bars
    var colors = d3.scaleOrdinal().range(["#a05d56", "#d0743c", "#ff8c00","red", "#a05d56", "#d0743c", "#ff8c00","#a05d56","red", "#a05d56", "#d0743c","red","#a05d56","red"]);
	svg.selectAll("mybar")
	  .data(data)
	  .enter()
	  .append("rect")
		.attr("x", function(d) { return x(d.loci); })
		.attr("y", function(d) { return y(d.avg); })
		.attr("width", x.bandwidth())
		.attr("height", function(d) { return height - y(d.avg); })
		.attr("fill", function(data, i) {
              return colors(i);
             });
} // end else


</script>


